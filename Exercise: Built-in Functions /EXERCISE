CREATE VIEW view_river_info                    -----> River Info
	AS
SELECT
	CONCAT_WS(' ',
	'The river',
	river_name,
	'flows into the',
	outflow,
	'and is',
	"length",
	'kilometers long.'
	) AS "River Information"
FROM
	rivers
ORDER BY
	river_name

-----------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE VIEW                                               -----> Concatenate Geography Data
	view_continents_countries_currencies_details
AS
SELECT
	CONCAT_WS((': '), con.continent_name, con.continent_code) AS "continent_details",
	CONCAT_WS((' - '), cou.country_name, cou.capital, cou.area_in_sq_km, 'km2') AS "country_information",
	CONCAT(cur.description, ' (',cur.currency_code,')') AS "currencies"
FROM
	continents AS con,
	countries AS cou,
	currencies AS cur
WHERE
	con.continent_code = cou.continent_code
			AND
	cou.currency_code = cur.currency_code
ORDER BY
	country_information ASC, 
	currencies ASC	

-------------------------------------------------------------------------------------------------------

ALTER TABLE 							-----> Capital Code
	countries
ADD COLUMN 
	capital_code CHAR(2);

UPDATE
	countries
SET 
	capital_code = SUBSTRING(capital, 1, 2)
RETURNING *;

-------------------------------------------------------------------------------------------------------

SELECT									-----> (Descr)iption
	SUBSTRING(description FROM 5) as "substring"
FROM
	currencies

-------------------------------------------------------------------------------------------------------

SELECT											-----> Substring River Length using REGEX
	(REGEXP_MATCHES("River Information", '[0-9]{1,4}'))[1] AS "river_length"
FROM
	view_river_info

-------------------------------------------------------------------------------------------------------

SELECT									-----> Replace a, A (function REPLACE() is case-sensitive)
	REPLACE(mountain_range, 'a', '@') AS replace_a,
	REPLACE(mountain_range, 'A', '$') AS replace_A
FROM
	mountains


-------------------------------------------------------------------------------------------------------

SELECT									-----> Translate
	capital,
	TRANSLATE(capital, 'áãåçéíñóú', 'aaaceinou') AS translated_name
FROM
	countries

-------------------------------------------------------------------------------------------------------

SELECT								-----> LEADING
	continent_name,
	LTRIM(continent_name) AS "trim"
FROM
	continents

-------------------------------------------------------------------------------------------------------

SELECT									-----> TRAILING
	continent_name,
	TRIM(continent_name) AS "trim"
FROM
	continents

-------------------------------------------------------------------------------------------------------

SELECT									-----> LTRIM & RTRIM
	LTRIM(peak_name, 'M') AS "left_trim",
	RTRIM(peak_name, 'm') AS "right_trim"
FROM
	peaks

---------------------------------------------------------------------------------------------------------

SELECT												----->  Character Length and Bits
	CONCAT_WS(' ', m.mountain_range, p.peak_name) AS "mountain_information",
	LENGTH(CONCAT_WS(' ', m.mountain_range, p.peak_name)) AS "characters_length",
	BIT_LENGTH(CONCAT_WS(' ', m.mountain_range, p.peak_name)) AS "bits_of_a_tring"
FROM
	mountains AS m, 
	peaks AS p
WHERE
	m."id" = p.mountain_id


-------------------------------------------------------------------------------------------------------

SELECT								-----> Length of a Number
	population,
	LENGTH(population::VARCHAR) AS lenght
FROM
	countries

-------------------------------------------------------------------------------------------------------

SELECT								-----> Positive and Negative LEFT
	peak_name,
	LEFT(peak_name, 4) AS "positive_left",
	LEFT(peak_name, -4) AS "negative_left"
FROM
	peaks

-------------------------------------------------------------------------------------------------------

SELECT								-----> Positive and Negative RIGHT
	peak_name,
	RIGHT(peak_name, 4) AS "positive_left",
	RIGHT(peak_name, -4) AS "negative_left"
FROM
	peaks

-------------------------------------------------------------------------------------------------------

UPDATE								-----> Update iso_code
	countries
SET
	iso_code = UPPER(LEFT(country_name, 3))
WHERE
	iso_code IS NULL;


----------------------------------------------------------------------------------------------------------
												-----> Elevation --->> Peak Name
SELECT
	CONCAT_WS(' --->> ', elevation, peak_name) AS "Elevation -->> Peak Name"
FROM
	peaks
WHERE
	elevation >= 4884;

----------------------------------------------------------------------------------------------------------

UPDATE									-----> REVERSE country_code
	countries
SET
	country_code = LOWER(REVERSE(country_code))

----------------------------------------------------------------------------------------------------------

CREATE TABLE							-----> Arithmetical Operators
	bookings_calculation
AS SELECT
	booked_for,
	CAST(booked_for * 50 AS NUMERIC) AS multiplication,
	CAST(booked_for % 50 AS NUMERIC) AS modulo
FROM
	bookings
WHERE
	apartment_id = 93;

----------------------------------------------------------------------------------------------------------

SELECT										-----> ROUND vs TRUNC
	latitude,
	ROUND(latitude, 2) AS round,
	TRUNC(latitude, 2) AS trunc
FROM
	apartments

----------------------------------------------------------------------------------------------------------





