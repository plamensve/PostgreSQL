CREATE OR REPLACE FUNCTION fn_full_name(first_name VARCHAR, last_name VARCHAR)                          -----> User-defined Function Full Name
RETURNS VARCHAR AS
    $$
        BEGIN
            RETURN INITCAP(CONCAT(first_name, ' ', last_name));
        end;
    $$
LANGUAGE plpgsql;

-------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION fn_calculate_future_value(                                                ----->  User-defined Function Future Value

    initial_sum DECIMAL,
    yearly_interest_rate DECIMAL,
    number_of_years INT)
RETURNS DECIMAL AS
    $$
        DECLARE
            future_value DECIMAL;
        BEGIN
            future_value := TRUNC(initial_sum * (POWER(1 + yearly_interest_rate, number_of_years)), 4);
            RETURN future_value;
        end;
    $$
LANGUAGE plpgsql;


SELECT fn_calculate_future_value(1000, 0.1, 5)


-------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION fn_is_word_comprised(                                            -----> User-defined Function Is Word Comprised
    set_of_letters VARCHAR(50),
    word VARCHAR(50)
)
RETURNS BOOLEAN
AS
    $$
        BEGIN
            RETURN TRIM(LOWER(word), LOWER(set_of_letters)) = '';
        end;
    $$
LANGUAGE plpgsql;

-------------------------------------------------------------------------------------------------------------------------------------------

CREATE OR REPLACE FUNCTION fn_is_game_over(                                                            -----> Game Over
    is_game_over BOOLEAN
)
RETURNS TABLE (
    name VARCHAR(50),
    game_type_id INT,
    is_finished BOOLEAN
              )
AS
    $$
        BEGIN
            RETURN QUERY
            SELECT
                g.name, g.game_type_id, g.is_finished
            FROM games AS g
            WHERE g.is_finished = is_game_over;

        end;
    $$
LANGUAGE plpgsql;

-------------------------------------------------------------------------------------------------------------------------------------------




















































































